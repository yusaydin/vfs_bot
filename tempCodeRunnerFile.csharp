import java.io.Serializable;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

// Base abstract class for all employees
abstract class Employee implements Serializable {
    private String name;
    private String surname;
    private String pesel;
    private String username;
    private String password;

    public Employee(String name, String surname, String pesel, String username, String password) {
        this.name = name;
        this.surname = surname;
        this.pesel = pesel;
        this.username = username;
        this.password = password;
    }

    // Getters and setters with basic validation
    public String getName() { return name; }
    public String getSurname() { return surname; }
    public String getPesel() { return pesel; }
    public String getUsername() { return username; }
    
    public boolean checkPassword(String password) {
        return this.password.equals(password);
    }

    public void setPassword(String password) {
        if (password != null && !password.trim().isEmpty()) {
            this.password = password;
        }
    }
}

enum Specialization {
    CARDIOLOGIST, UROLOGIST, NEUROLOGIST, LARYNGOLOGIST
}

class Doctor extends Employee {
    private Specialization specialization;
    private String pwzNumber;
    private List<LocalDate> dutyDates;

    public Doctor(String name, String surname, String pesel, String username, 
                 String password, Specialization specialization, String pwzNumber) {
        super(name, surname, pesel, username, password);
        this.specialization = specialization;
        this.pwzNumber = pwzNumber;
        this.dutyDates = new ArrayList<>();
    }

    public Specialization getSpecialization() { return specialization; }
    public String getPwzNumber() { return pwzNumber; }
    public List<LocalDate> getDutyDates() { return new ArrayList<>(dutyDates); }
}

class Nurse extends Employee {
    private List<LocalDate> dutyDates;

    public Nurse(String name, String surname, String pesel, String username, String password) {
        super(name, surname, pesel, username, password);
        this.dutyDates = new ArrayList<>();
    }

    public List<LocalDate> getDutyDates() { return new ArrayList<>(dutyDates); }
}

class Administrator extends Employee {
    public Administrator(String name, String surname, String pesel, String username, String password) {
        super(name, surname, pesel, username, password);
    }
}
using System;
using System.Collections.Generic;

[Serializable]
public abstract class Employee
{
    private string name;
    private string surname;
    private string pesel;
    private string username;
    private string password;

    public Employee(string name, string surname, string pesel, string username, string password)
    {
        this.name = name;
        this.surname = surname;
        this.pesel = pesel;
        this.username = username;
        this.password = password;
    }

    public string Name { get => name; }
    public string Surname { get => surname; }
    public string Pesel { get => pesel; }
    public string Username { get => username; }

    public bool CheckPassword(string password)
    {
        return this.password.Equals(password);
    }

    public void SetPassword(string password)
    {
        if (!string.IsNullOrWhiteSpace(password))
        {
            this.password = password;
        }
    }
}

public enum Specialization
{
    CARDIOLOGIST,
    UROLOGIST,
    NEUROLOGIST,
    LARYNGOLOGIST
}

[Serializable]
public class Doctor : Employee
{
    private Specialization specialization;
    private string pwzNumber;
    private List<DateTime> dutyDates;

    public Doctor(string name, string surname, string pesel, string username, 
                 string password, Specialization specialization, string pwzNumber)
        : base(name, surname, pesel, username, password)
    {
        this.specialization = specialization;
        this.pwzNumber = pwzNumber;
        this.dutyDates = new List<DateTime>();
    }

    public Specialization Specialization { get => specialization; }
    public string PwzNumber { get => pwzNumber; }
    public List<DateTime> DutyDates { get => new List<DateTime>(dutyDates); }
}

[Serializable]
public class Nurse : Employee
{
    private List<DateTime> dutyDates;

    public Nurse(string name, string surname, string pesel, string username, string password)
        : base(name, surname, pesel, username, password)
    {
        this.dutyDates = new List<DateTime>();
    }

    public List<DateTime> DutyDates { get => new List<DateTime>(dutyDates); }
}

[Serializable]
public class Administrator : Employee
{
    public Administrator(string name, string surname, string pesel, string username, string password)
        : base(name, surname, pesel, username, password)
    {
    }
}